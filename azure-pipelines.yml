# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include:
      - master
      - Release*

pr:
  branches:
    include:
      - master
      - Release*

pool:
  vmImage: 'VS2017-Win2016'

variables:
- group: varGroupTest

steps:

# If reason build is started is "PullRequest"
# Use GitHub API to check if PR has specific label ("TestR")
# GitHub API: https://api.github.com/repos/{organization-or-name}/{project}/issues/{pr-number}
# If found, set output variable testR to true
# echo "##vso[task.setvariable variable=testR;isOutput=true]true"
- bash: |
   echo "Looking for label at https://api.github.com/repos/$BUILD_REPOSITORY_ID/issues/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/labels"
   if curl -s "https://api.github.com/repos/$BUILD_REPOSITORY_ID/issues/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/labels" | grep '"name": "TestR"'
   then
     echo "##vso[task.setvariable variable=testR;isOutput=true]true"
     echo "[INFO] TestR label found!"
   fi
  displayName: Check for CI label build on PR
  condition: eq(variables['Build.Reason'], 'PullRequest') # only run step if it is a PR
  name: checkPrLabel
    
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)" /p:DebugSymbols=false /p:DebugType=None /p:ExcludeGeneratedDebugSymbol=true'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'webApp' 
    publishLocation: 'Container' # Options: container, filePath
    #targetPath: # Required when publishLocation == FilePath